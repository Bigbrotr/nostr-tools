name: Publish to PyPI

on:
  push:
    tags: ['v*']  # All version tags
  release:
    types: [published]
  workflow_dispatch:  # Manual trigger with options
    inputs:
      target:
        description: 'Deployment target'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
          - both

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Build distributions
      run: |
        pip install --upgrade build
        python -m build

    - name: Store distributions
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  # ðŸ§ª TestPyPI: Auto-deploy pre-releases + manual trigger
  test-pypi:
    name: Test PyPI
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (startsWith(github.ref, 'refs/tags/v') && (
        contains(github.ref, '-alpha') ||
        contains(github.ref, '-beta') ||
        contains(github.ref, '-rc') ||
        contains(github.ref, '-dev') ||
        contains(github.ref, '-pre')
      ))

    environment:
      name: testpypi
      url: https://test.pypi.org/p/nostr-tools

    permissions:
      id-token: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  # ðŸš€ PyPI: Only stable releases
  pypi:
    name: PyPI
    needs: build
    runs-on: ubuntu-latest
    if: |
      (startsWith(github.ref, 'refs/tags/v') &&
       !contains(github.ref, '-') &&
       github.event_name != 'workflow_dispatch') ||
      (github.event_name == 'workflow_dispatch' &&
       contains(github.event.inputs.target, 'pypi'))

    environment:
      name: pypi
      url: https://pypi.org/p/nostr-tools

    permissions:
      id-token: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  # ðŸ“¦ GitHub Release: Only for stable versions
  release:
    name: GitHub Release
    needs: pypi
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
