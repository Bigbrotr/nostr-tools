repos:
  # Code formatting and linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        stages: [commit]
      - id: ruff-format
        stages: [commit]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --show-error-codes, --no-error-summary]
        stages: [commit]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml", "-r", "nostr_tools"]
        stages: [commit]

  # Documentation build and validation
  - repo: local
    hooks:
      - id: docs-clean-build
        name: Clean and Build Documentation
        entry: bash -c 'make docs-commit-check'
        language: system
        files: '^(docs/|nostr_tools/).*\.(py|rst|md)$'
        pass_filenames: false
        stages: [commit]

      - id: docs-link-check
        name: Validate Documentation Links
        entry: bash -c 'if [ -d "docs/_build/html" ]; then python3 -m pip install linkchecker >/dev/null 2>&1 && linkchecker docs/_build/html/ --check-extern || echo "Link validation completed with warnings"; fi'
        language: system
        files: '^docs/.*\.rst$'
        pass_filenames: false
        stages: [push]

  # Unit tests
  - repo: local
    hooks:
      - id: test-unit
        name: Run Unit Tests
        entry: bash -c 'make test-unit'
        language: system
        files: '^(nostr_tools/|tests/).*\.py$'
        pass_filenames: false
        stages: [commit]