# Pre-commit hooks for nostr-tools
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Ruff for fast Python linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.0
    hooks:
      # Linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        name: ruff-lint
        description: Run Ruff linter with auto-fixes
      # Formatter
      - id: ruff-format
        name: ruff-format
        description: Run Ruff formatter

  # MyPy for static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-setuptools,
          aiohttp,
          pytest,
        ]
        args: [--config-file=pyproject.toml]
        exclude: ^(tests/|examples/|docs/)
        name: mypy
        description: Static type checking with MyPy

  # General code quality hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # File and whitespace checks
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: check-case-conflict

      # Syntax and format checks
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-toml
      - id: check-json

      # Python-specific checks
      - id: debug-statements
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

      # Security checks
      - id: detect-private-key

  # Security scanning with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [--config, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^(tests/|examples/)
        name: bandit
        description: Security linting with Bandit

  # Dependency security checking
  - repo: https://github.com/pypa/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        name: pip-audit
        description: Audit Python packages for known vulnerabilities

  # Documentation verification
  - repo: local
    hooks:
      - id: docs-build
        name: docs-build
        description: Build documentation to verify it works
        entry: make docs-build-check
        language: system
        files: ^(docs/|src/.*\.py|README\.md|CHANGELOG\.md)$
        pass_filenames: false
        stages: [commit]

      - id: docs-links
        name: docs-links
        description: Check documentation links
        entry: make docs-links-check
        language: system
        files: ^(docs/.*\.(rst|md)|src/.*\.py)$
        pass_filenames: false
        stages: [push]

      - id: docs-coverage
        name: docs-coverage
        description: Check documentation coverage
        entry: make docs-coverage-check
        language: system
        files: ^src/.*\.py$
        pass_filenames: false
        stages: [push]

# Configuration
default_install_hook_types: [pre-commit, pre-push]
default_stages: [commit]

# Files to exclude from all hooks
exclude: |
  (?x)^(
      build/|
      dist/|
      \.eggs/|
      .*\.egg-info/|
      \.git/|
      \.mypy_cache/|
      \.pytest_cache/|
      \.ruff_cache/|
      __pycache__/|
      \.venv/|
      venv/|
      node_modules/|
      backup_.*|
      docs/_build/|
      docs/_autosummary/
  )$

# Minimum pre-commit version required
minimum_pre_commit_version: 3.0.0

# Fail fast - stop on first failure
fail_fast: false

ci:
  autoupdate_schedule: weekly
