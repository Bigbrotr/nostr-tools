[build-system]
requires = ["setuptools>=72.0", "wheel", "setuptools_scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nostr-tools"
version = "0.1.0"
description = "A comprehensive Python library for Nostr protocol interactions"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Bigbrotr", email = "hello@bigbrotr.com"}
]
maintainers = [
    {name = "Bigbrotr", email = "hello@bigbrotr.com"}
]
keywords = [
    "nostr", "decentralized", "social", "protocol", "websocket",
    "cryptography", "bitcoin", "schnorr", "secp256k1", "relay"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Communications",
    "Topic :: Security :: Cryptography",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

dependencies = [
    # Cryptographic dependencies
    "secp256k1>=0.14.0,<1.0.0",
    "bech32>=1.2.0,<2.0.0",
    
    # Network and WebSocket dependencies
    "aiohttp>=3.8.0,<4.0.0",
    "aiohttp-socks>=0.8.0,<1.0.0",
    
    # Python version compatibility
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    # Code quality and formatting
    "ruff==0.8.6",
    "mypy>=1.14.0,<2.0.0",
    "pre-commit>=4.0.0,<5.0.0",
    
    # Build and distribution tools
    "build>=1.0.0,<2.0.0",
    "twine>=6.0.0,<7.0.0",
    "wheel>=0.44.0",
]

# Testing dependencies
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.24.0,<1.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
]

# Security scanning dependencies
security = [
    "bandit[toml]>=1.8.0,<2.0.0",
    "safety>=3.0.0,<4.0.0",
    "pip-audit>=2.7.0,<3.0.0",
]

# Documentation dependencies
docs = [
    "sphinx>=7.1.0,<8.0.0",
    "sphinx-rtd-theme>=2.0.0,<3.0.0",
    "myst-parser>=2.0.0,<3.0.0",
    "sphinx-autodoc-typehints>=1.24.0,<2.0.0",
    "linkchecker>=10.0.0",
]

# Performance profiling dependencies
perf = [
    "pytest-benchmark>=5.0.0,<6.0.0",
    "memory-profiler>=0.61.0,<1.0.0",
    "py-spy>=0.4.0,<1.0.0",
]

# All dependencies combined
all = [
    "nostr-tools[dev,test,security,docs,perf]"
]

[project.urls]
Homepage = "https://github.com/bigbrotr/nostr-tools"
Documentation = "https://bigbrotr.github.io/nostr-tools/"
Repository = "https://github.com/bigbrotr/nostr-tools.git"
"Bug Reports" = "https://github.com/bigbrotr/nostr-tools/issues"
"Source Code" = "https://github.com/bigbrotr/nostr-tools"
Changelog = "https://github.com/bigbrotr/nostr-tools/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["nostr_tools*"]
exclude = ["tests*", "docs*", "examples*", "build*", "dist*"]

[tool.setuptools.package-data]
nostr_tools = ["py.typed"]

# Ruff configuration (replaces black, isort, flake8, and more)
[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "PTH123", # use pathlib for open() - not always necessary
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # imported but unused
"tests/*" = ["F401", "F811", "S101"]  # asserts are OK in tests
"examples/*" = ["T201"]  # print statements are OK in examples

[tool.ruff.lint.isort]
known-first-party = ["nostr_tools"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Relaxed for initial release
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "secp256k1.*",
    "bech32.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",